buildscript {
    repositories {
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        mavenCentral()
    }
    dependencies {
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
    }
}

plugins {
    id "net.minecraftforge.gradle" version "5.1.+"
}

apply plugin: "org.spongepowered.mixin"

group = "com.ricemo"
version = "${mod_version}"
archivesBaseName = "${mod_id}"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: "official", version: "${minecraft_version}"

    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "co_construction"
            mods {
                co_construction {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "co_construction"
            mods {
                co_construction {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "co_construction"
            mods {
                co_construction {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            args "--mod", "co_construction", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
            mods {
                co_construction {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "co_construction.refmap.json"
    config "co_construction.mixins.json"
}


sourceSets.main.resources { srcDir "src/generated/resources" }

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "co_construction",
                //"Specification-Vendor": "co_construction authors",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "co_construction authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy("reobfJar")

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
